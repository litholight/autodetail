{"version":3,"sources":["truck.jpg","Header.js","About.js","Services.js","Homepage.js","serviceWorker.js","index.js","App.js"],"names":["module","exports","Container","styled","div","Brand","Heading","HR","hr","UL","LI","NavItem","Link","Header","to","About","props","Section","List","ul","Item","li","Services","Info","ImageContainer","Image","img","App","src","truck","alt","Boolean","window","location","hostname","match","ReactDOM","render","path","Homepage","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"4FAAAA,EAAOC,QAAU,IAA0B,mC,i8CCM3C,IAAMC,EAAYC,IAAOC,IAAV,KASTC,EAAQF,IAAOC,IAAV,KAMLE,EAAUH,IAAOC,IAAV,KAQPG,EAAKJ,IAAOK,GAAV,KAMFC,EAAKN,IAAOC,IAAV,KAWFM,EAAKP,IAAOC,IAAV,KAMFO,EAAUR,YAAOS,IAAPT,CAAH,KAyCEU,EA3BA,WACb,OACE,kBAACX,EAAD,KACE,kBAACG,EAAD,KACE,kBAACC,EAAD,kDAGF,kBAACC,EAAD,MAGA,6BACE,kBAACE,EAAD,KACE,kBAACC,EAAD,KACE,kBAACC,EAAD,CAASG,GAAG,KAAZ,SAEF,kBAACJ,EAAD,KACE,kBAACC,EAAD,CAASG,GAAG,UAAZ,aAEF,kBAACJ,EAAD,KACE,kBAACC,EAAD,CAASG,GAAG,aAAZ,iBC/EGC,MAJf,SAAeC,GACb,OAAO,0C,kZCAT,IAAMC,EAAUd,IAAOC,IAAV,KAQPc,EAAOf,IAAOgB,GAAV,KAIJC,EAAOjB,IAAOkB,GAAV,KAoCKC,MA9Bf,SAAkBN,GAChB,OACE,6BACE,kBAACC,EAAD,yBACA,kBAACA,EAAD,0BACA,kBAACC,EAAD,KACE,kBAACE,EAAD,aACA,kBAACA,EAAD,cACA,kBAACA,EAAD,cACA,kBAACA,EAAD,oBAEF,kBAACH,EAAD,wBACA,kBAACC,EAAD,KACE,kBAACE,EAAD,mCACA,kBAACA,EAAD,yBACA,kBAACA,EAAD,uBACA,kBAACA,EAAD,yCAEF,kBAACH,EAAD,wBACA,kBAACC,EAAD,KACE,kBAACE,EAAD,aAEF,kBAACH,EAAD,wBACA,kBAACC,EAAD,KACE,kBAACE,EAAD,e,ieCtCR,IAAMG,EAAOpB,IAAOC,IAAV,KAMJoB,EAAiBrB,IAAOkB,GAAV,KAOdI,EAAQtB,IAAOuB,IAAV,KAwBIC,MAhBf,WACE,OACE,6BACE,kBAACH,EAAD,KACE,kBAACC,EAAD,CAAOG,IAAKC,IAAOC,IAAI,UAGzB,kBAACP,EAAD,+BACA,kBAACA,EAAD,4BACA,kBAACA,EAAD,2BACA,kBAACA,EAAD,2CACA,kBAACA,EAAD,sDC3BcQ,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAAO,mBCAD,WACb,OACE,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,UACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,aACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,KACV,kBAACC,EAAD,WDZM,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.6f82423a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/truck.933a5177.jpg\";","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\n// import arrowsign from \"./arrowsign.svg\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  color: lightblue;\n  font-size: 2rem;\n  font-weight: bold;\n  text-align: center;\n  width: 100%;\n  border-bottom: 6px solid darkred;\n`;\n\nconst Brand = styled.div`\n  padding: 2rem;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Heading = styled.div`\n  color: lightblue;\n  @media (max-width: 480px) {\n    font-size: 1rem;\n    width: 200px;\n  }\n`;\n\nconst HR = styled.hr`\n  border: 3px solid darkred;\n  width: 70%;\n  margin: 0px auto;\n`;\n\nconst UL = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-evenly;\n  font-size: 1.5rem;\n  color: grey;\n  list-style-type: none;\n  margin: 0.5rem;\n`;\n\nconst LI = styled.div`\n  /* display: flex;\n  align-items: center; */\n  display: block;\n`;\n\nconst NavItem = styled(Link)`\n  text-decoration: none;\n\n  &:hover {\n    color: darkred;\n    cursor: pointer;\n  }\n\n  @media (max-width: 480px) {\n    font-size: 1rem;\n    width: 200px;\n  }\n`;\n\nconst Header = () => {\n  return (\n    <Container>\n      <Brand>\n        <Heading>STEVE & TANNER'S COMPLETE AUTO DETAILING</Heading>\n      </Brand>\n\n      <HR />\n      {/* <img src={arrowsign} width=\"400px\" alt=\"sign\" /> */}\n\n      <nav>\n        <UL>\n          <LI>\n            <NavItem to=\"/\">HOME</NavItem>\n          </LI>\n          <LI>\n            <NavItem to=\"/about\">ABOUT US</NavItem>\n          </LI>\n          <LI>\n            <NavItem to=\"/services\">SERVICES</NavItem>\n          </LI>\n        </UL>\n      </nav>\n    </Container>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\n\nfunction About(props) {\n  return <div>About us</div>;\n}\n\nexport default About;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Section = styled.div`\n  color: lightblue;\n  font-size: 2rem;\n  font-weight: bold;\n  padding: 1rem;\n  text-align: center;\n`;\n\nconst List = styled.ul`\n  list-style: none;\n`;\n\nconst Item = styled.li`\n  color: lightblue;\n  font-size: 1rem;\n  text-align: center;\n`;\n\nfunction Services(props) {\n  return (\n    <div>\n      <Section>Services Offered</Section>\n      <Section>Full Service Wash</Section>\n      <List>\n        <Item>Wash</Item>\n        <Item>Tires</Item>\n        <Item>Shine</Item>\n        <Item>15 minutes</Item>\n      </List>\n      <Section>Complete Detail</Section>\n      <List>\n        <Item>Includes full service wash</Item>\n        <Item>Two coats of wax</Item>\n        <Item>Carpet shampoo</Item>\n        <Item>$100 cars, $120 trucks and vans</Item>\n      </List>\n      <Section>Interior Detail</Section>\n      <List>\n        <Item>$45</Item>\n      </List>\n      <Section>Exterior Detail</Section>\n      <List>\n        <Item>$65</Item>\n      </List>\n    </div>\n  );\n}\n\nexport default Services;\n","import React from 'react'\n\nimport './App.css'\nimport styled from 'styled-components'\n\nimport truck from './truck.jpg'\n\nconst Info = styled.div`\n  color: white;\n  font-size: 1rem;\n  text-align: center;\n`\n\nconst ImageContainer = styled.li`\n  display: flex;\n  justify-content: center;\n  padding-top: 30px;\n  margin-bottom: 1rem;\n`\n\nconst Image = styled.img`\n  width: 800px;\n  @media (max-width: 480px) {\n    width: 12.5%;\n    height: auto;\n  }\n`\n\nfunction App() {\n  return (\n    <div>\n      <ImageContainer>\n        <Image src={truck} alt='sign' />\n      </ImageContainer>\n\n      <Info>Stop by, text or call!</Info>\n      <Info>Tannir 740-343-5865</Info>\n      <Info>Steve 740-221-5690</Info>\n      <Info>Available 9-4 Monday thru Thursday</Info>\n      <Info>We use Malco - The Choice of Profressionals</Info>\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport About from \"./About\";\nimport Services from \"./Services\";\nimport Homepage from \"./Homepage\";\n\nexport default function App() {\n  return (\n    <Router>\n      <Header />\n      <Switch>\n        <Route path=\"/about\">\n          <About />\n        </Route>\n        <Route path=\"/services\">\n          <Services />\n        </Route>\n        <Route path=\"/\">\n          <Homepage />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n"],"sourceRoot":""}